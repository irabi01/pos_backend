# Generated by Django 2.1 on 2019-04-24 09:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('pos_backend_app', '0003_auto_20190423_1606'),
    ]

    operations = [
        migrations.CreateModel(
            name='TbAccessRights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Access Rights',
            },
        ),
        migrations.CreateModel(
            name='TbAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Account_code', models.CharField(max_length=50)),
                ('Account_name', models.CharField(max_length=50)),
                ('Account_type', models.PositiveIntegerField()),
            ],
            options={
                'verbose_name_plural': 'Accounts',
            },
        ),
        migrations.CreateModel(
            name='TbAssignPOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(choices=[('In-Use', 'In-Use'), ('Occupied', 'Occupied'), ('Open', 'Open')], default='Open', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Assign POS',
            },
        ),
        migrations.CreateModel(
            name='TbGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Groups',
            },
        ),
        migrations.CreateModel(
            name='TbGroupUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbGroup')),
            ],
            options={
                'verbose_name_plural': 'Users-Groups',
            },
        ),
        migrations.CreateModel(
            name='TbInventoryAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Account_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbAccounts')),
            ],
            options={
                'verbose_name_plural': 'Inventory Accounts',
            },
        ),
        migrations.CreateModel(
            name='TbInventoryCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category_code', models.CharField(max_length=50)),
                ('Category_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Inventory Categories',
            },
        ),
        migrations.CreateModel(
            name='TbInventoryControls',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('OpenQtyTotalValue', models.FloatField()),
                ('OpenQtyAvgValue', models.FloatField()),
                ('OpenQty', models.FloatField()),
                ('AlocatedQty', models.FloatField()),
                ('OrderQty', models.FloatField()),
                ('ReorderLevelQty', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'Inventory Control',
            },
        ),
        migrations.CreateModel(
            name='TbInventoryTransactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Transaction_number', models.CharField(max_length=50)),
                ('Quantity', models.FloatField()),
                ('Date', models.DateField()),
            ],
            options={
                'verbose_name_plural': 'Inventory Transaction',
            },
        ),
        migrations.CreateModel(
            name='TbItemDefinition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Barcode1', models.CharField(max_length=50)),
                ('Barcode2', models.CharField(max_length=50)),
                ('Description', models.CharField(max_length=50)),
                ('BuyQty', models.FloatField()),
                ('BuyUnit', models.FloatField()),
                ('StockQty', models.FloatField()),
                ('StockUnit', models.FloatField()),
                ('OpenQtyTotalValue', models.FloatField()),
                ('OpenQtyAvgValue', models.FloatField()),
                ('OpenQty', models.FloatField()),
                ('AlocatedQty', models.FloatField()),
                ('OrderQty', models.FloatField()),
                ('ReorderLevelQty', models.FloatField()),
                ('UnitSellingPrice', models.FloatField()),
                ('Category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbInventoryCategories')),
            ],
            options={
                'verbose_name_plural': 'Items Definition',
            },
        ),
        migrations.CreateModel(
            name='TbPOS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pos_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Point of sale',
            },
        ),
        migrations.CreateModel(
            name='TbRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Role', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='TbStores',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Store_code', models.CharField(max_length=50)),
                ('Store_name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Stores',
            },
        ),
        migrations.CreateModel(
            name='TbSupplierCategories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category_name', models.CharField(max_length=50)),
                ('Category_code', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Supplier Categories',
            },
        ),
        migrations.CreateModel(
            name='TbSuppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Supplier_name', models.CharField(max_length=50)),
                ('Telephone_number', models.CharField(max_length=15)),
                ('Email', models.EmailField(max_length=254)),
                ('Street', models.CharField(max_length=50)),
                ('Representative_name', models.CharField(max_length=50)),
                ('Representative_mobile', models.CharField(max_length=15)),
                ('Supplier_category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbSupplierCategories')),
            ],
            options={
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='TbTax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tax_code', models.CharField(max_length=50)),
                ('Tax_name', models.CharField(max_length=50)),
                ('Rate', models.FloatField()),
            ],
            options={
                'verbose_name_plural': 'Tax',
            },
        ),
        migrations.CreateModel(
            name='TbTenderType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tender_type', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Tender Type',
            },
        ),
        migrations.CreateModel(
            name='TbTerms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Term_name', models.CharField(max_length=50)),
                ('Term_code', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Terms',
            },
        ),
        migrations.RenameModel(
            old_name='Users',
            new_name='TbUsers',
        ),
        migrations.AddField(
            model_name='tbitemdefinition',
            name='Tax_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbTax'),
        ),
        migrations.AddField(
            model_name='tbinventorytransactions',
            name='Item_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbItemDefinition'),
        ),
        migrations.AddField(
            model_name='tbinventorytransactions',
            name='Store_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbStores'),
        ),
        migrations.AddField(
            model_name='tbinventorycontrols',
            name='Store_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbStores'),
        ),
        migrations.AddField(
            model_name='tbinventoryaccounts',
            name='Category_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbInventoryCategories'),
        ),
        migrations.AddField(
            model_name='tbgroupusers',
            name='User_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbUsers'),
        ),
        migrations.AddField(
            model_name='tbassignpos',
            name='Pos_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbPOS'),
        ),
        migrations.AddField(
            model_name='tbassignpos',
            name='User_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbUsers'),
        ),
        migrations.AddField(
            model_name='tbaccessrights',
            name='Group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbGroup'),
        ),
        migrations.AddField(
            model_name='tbaccessrights',
            name='Role_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos_backend_app.TbRoles'),
        ),
    ]
